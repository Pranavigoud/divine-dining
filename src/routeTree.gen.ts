/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ReservationRouteImport } from './routes/reservation'
import { Route as MenuRouteImport } from './routes/menu'
import { Route as GalleryRouteImport } from './routes/gallery'
import { Route as ContactRouteImport } from './routes/contact'
import { Route as IndexRouteImport } from './routes/index'

const ReservationRoute = ReservationRouteImport.update({
  id: '/reservation',
  path: '/reservation',
  getParentRoute: () => rootRouteImport,
} as any)
const MenuRoute = MenuRouteImport.update({
  id: '/menu',
  path: '/menu',
  getParentRoute: () => rootRouteImport,
} as any)
const GalleryRoute = GalleryRouteImport.update({
  id: '/gallery',
  path: '/gallery',
  getParentRoute: () => rootRouteImport,
} as any)
const ContactRoute = ContactRouteImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/contact': typeof ContactRoute
  '/gallery': typeof GalleryRoute
  '/menu': typeof MenuRoute
  '/reservation': typeof ReservationRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/contact': typeof ContactRoute
  '/gallery': typeof GalleryRoute
  '/menu': typeof MenuRoute
  '/reservation': typeof ReservationRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/contact': typeof ContactRoute
  '/gallery': typeof GalleryRoute
  '/menu': typeof MenuRoute
  '/reservation': typeof ReservationRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/contact' | '/gallery' | '/menu' | '/reservation'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/contact' | '/gallery' | '/menu' | '/reservation'
  id: '__root__' | '/' | '/contact' | '/gallery' | '/menu' | '/reservation'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ContactRoute: typeof ContactRoute
  GalleryRoute: typeof GalleryRoute
  MenuRoute: typeof MenuRoute
  ReservationRoute: typeof ReservationRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/reservation': {
      id: '/reservation'
      path: '/reservation'
      fullPath: '/reservation'
      preLoaderRoute: typeof ReservationRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/menu': {
      id: '/menu'
      path: '/menu'
      fullPath: '/menu'
      preLoaderRoute: typeof MenuRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/gallery': {
      id: '/gallery'
      path: '/gallery'
      fullPath: '/gallery'
      preLoaderRoute: typeof GalleryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ContactRoute: ContactRoute,
  GalleryRoute: GalleryRoute,
  MenuRoute: MenuRoute,
  ReservationRoute: ReservationRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
